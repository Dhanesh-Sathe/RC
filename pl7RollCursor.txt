-- Step 1: Create the tables

-- N_RollCall (new roll call data)
CREATE TABLE IF NOT EXISTS N_RollCall (
    roll_number INT PRIMARY KEY,
    student_name VARCHAR(100),
    course_code VARCHAR(20)
);

-- O_RollCall (old roll call data)
CREATE TABLE IF NOT EXISTS O_RollCall (
    roll_number INT PRIMARY KEY,
    student_name VARCHAR(100),
    course_code VARCHAR(20)
);

-- Step 2: Insert sample data into N_RollCall table
INSERT INTO N_RollCall (roll_number, student_name, course_code) 
VALUES 
    (101, 'Alice', 'CS101'),
    (102, 'Bob', 'CS101'),
    (103, 'Charlie', 'CS102');

-- Step 3: Insert sample data into O_RollCall table
INSERT INTO O_RollCall (roll_number, student_name, course_code) 
VALUES 
    (101, 'Alice', 'CS101');

-- Step 4: Create the stored procedure to merge data

DELIMITER $$

CREATE PROCEDURE merge_rollcall_data(p_course_code VARCHAR(20))
BEGIN
    -- Declare cursor and variables
    DECLARE done INT DEFAULT 0;
    DECLARE v_roll_number INT;
    DECLARE v_student_name VARCHAR(100);
    DECLARE v_course_code VARCHAR(20);

    -- Declare cursor to fetch data from N_RollCall based on course_code
    DECLARE cur_rollcall CURSOR FOR
        SELECT roll_number, student_name, course_code
        FROM N_RollCall
        WHERE course_code = p_course_code;

    -- Declare handler for end of data (when no more rows are available)
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    -- Open the cursor
    OPEN cur_rollcall;

    -- Loop through each record in the cursor
    read_loop: LOOP
        -- Fetch data into variables
        FETCH cur_rollcall INTO v_roll_number, v_student_name, v_course_code;
        
        -- Exit the loop if no more rows are found
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Check if the record already exists in O_RollCall
        IF NOT EXISTS (SELECT 1 FROM O_RollCall WHERE roll_number = v_roll_number) THEN
            -- Insert record into O_RollCall if it doesn't exist
            INSERT INTO O_RollCall (roll_number, student_name, course_code)
            VALUES (v_roll_number, v_student_name, v_course_code);
        END IF;
    END LOOP;

    -- Close the cursor
    CLOSE cur_rollcall;
END$$

DELIMITER ;

-- Step 5: Call the procedure to merge data for a specific course

-- Example: Merge data for course 'CS101'
CALL merge_rollcall_data('CS101');

-- Step 6: Check the contents of O_RollCall table after procedure call
SELECT * FROM O_RollCall;

-- Optional: Clean up by dropping the procedure and tables (if no longer needed)
-- DROP PROCEDURE IF EXISTS merge_rollcall_data;
-- DROP TABLE IF EXISTS N_RollCall;
-- DROP TABLE IF EXISTS O_RollCall;
